# Generated by Django 5.2.3 on 2025-06-19 08:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EducationModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the education module', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Short description of the module', null=True)),
                ('ehblo_link', models.URLField(blank=True, help_text='URL to the original module on the EHBLO partner platform', null=True)),
                ('content', models.TextField(blank=True, help_text='Cached content of the module (optional, for offline access/speed)', null=True)),
                ('date_published', models.DateField(auto_now_add=True, help_text='Date the module was published or added')),
            ],
            options={
                'ordering': ['-date_published'],
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount of expense', max_digits=10)),
                ('category', models.CharField(help_text="e.g., 'Food', 'Rent', 'Transport', 'Utilities'", max_length=255)),
                ('date', models.DateField(auto_now_add=True, help_text='Date when the expense was recorded')),
                ('description', models.TextField(blank=True, help_text='Optional description of the expense', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount of income', max_digits=10)),
                ('source', models.CharField(help_text="e.g., 'Salary', 'Freelance', 'Gift'", max_length=255)),
                ('date', models.DateField(auto_now_add=True, help_text='Date when the income was recorded')),
                ('description', models.TextField(blank=True, help_text='Optional description of the income', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incomes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the project (e.g., 'New Car Fund')", max_length=255)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the project', null=True)),
                ('target_amount', models.DecimalField(blank=True, decimal_places=2, help_text='The total amount of money targeted for this project', max_digits=10, null=True)),
                ('current_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Current amount saved towards the project', max_digits=10)),
                ('start_date', models.DateField(auto_now_add=True, help_text='Date when the project was started')),
                ('due_date', models.DateField(blank=True, help_text='Optional target completion date', null=True)),
                ('is_completed', models.BooleanField(default=False, help_text='True if the project has been completed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['due_date', 'is_completed'],
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the recommendation', max_length=255)),
                ('content', models.TextField(help_text='Detailed content of the financial recommendation')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Date and time the recommendation was created')),
                ('is_read', models.BooleanField(default=False, help_text='True if the user has read this recommendation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('financial_goal', models.CharField(blank=True, help_text="e.g., 'Save for a down payment', 'Pay off debt'", max_length=255, null=True)),
                ('risk_tolerance', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', help_text="User's comfort level with financial risk", max_length=50)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
